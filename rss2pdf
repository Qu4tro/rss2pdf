#!/usr/bin/env python
# encoding: utf-8

import subprocess
import os.path
import os

import feedparser
import click

import logging
logger = logging.getLogger(__name__)
level = logging.DEBUG
try:
    import coloredlogs
    coloredlogs.install(level=level)
except ImportError:
    logging.basicConfig(level=level)
    logger.info("Not using coloredlogs, because coloredlogs is not installed.")
logger.disabled = 1


def save_feed(feed_location, output_dir):

    def get_etag(etag):
        logger.debug("Etag: " + etag)
        logger.info("Grabbing etag")
        with open(etag) as f:
            lines = f.readlines()[:2]
            return lines[0], lines[1]

    def save_etag(feed, etag):

        logger.debug("Etag: " + etag)
        logger.info("Saving etag")
        with open(etag, 'w') as f:
            try:
                f.write(feed.etag)
            except AttributeError:
                pass
            f.write('\n')
            try:
                f.write(feed.modified)
            except AttributeError:
                pass

    etag_file = "".join(os.path.join(output_dir, '.etag'))

    try:
        etag, lmodified = get_etag(etag_file)
        feed = feedparser.parse(feed_location,
                                etag=etag,
                                modified=lmodified)
    except (IndexError, IOError):
        logger.info("Failed to get etag!")
        feed = feedparser.parse(feed_location)

    logger.debug("NÂº entries: " + str(len(feed.entries)))
    for entry in feed.entries:
        logger.debug("Entry: " + entry['title'])
        output = os.path.join(output_dir, entry['title'] + '.pdf')

        with open(os.devnull, 'wb') as null:
            subprocess.call(["wkhtmltopdf", str(entry['link']), output],
                            stdout=null, stderr=null)

    save_etag(feed, etag_file)


@click.command()
@click.option('--feed', help='Url of the feed to download', required=True,
              type=click.STRING)
@click.option('--directory', help='Output directory', show_default=True,
              default=os.getcwd(),
              type=click.Path(exists=True, writable=True, resolve_path=True))
def main(feed, directory):

    save_feed(feed_location=feed, output_dir=directory)


main()
# if __name__ == '__main__':
#     main()
